services:
  redis:
    image: redis:7.4.3
    container_name: sv_redis
    ports:
      - "6379:6379"
    volumes:
      - ./backend/db/redis/data:/data
    networks:
      - iceberg_net
  
  spark-iceberg:
    image: tabulario/spark-iceberg
    container_name: spark-iceberg
    networks:
      iceberg_net:
    depends_on:
      - rest
      - minio
    volumes:
      - ./warehouse:/home/iceberg/warehouse
      - ./notebooks:/home/iceberg/notebooks/notebooks
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - PYICEBERG_CATALOG__DEFAULT__URI=http://iceberg-rest:8181
      - PYICEBERG_CATALOG__DEFAULT__IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - PYICEBERG_CATALOG__DEFAULT__S3__ENDPOINT=http://minio:9000
      - PYICEBERG_CATALOG__DEFAULT__TYPE=rest
    ports:
      - 8888:8888
      - 8080:8080

  rest:
    image: tabulario/iceberg-rest
    container_name: iceberg-rest
    networks:
      iceberg_net:
    ports:
      - 8181:8181
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000

  minio:
      image: minio/minio
      container_name: minio
      environment:
        - MINIO_ROOT_USER=admin
        - MINIO_ROOT_PASSWORD=password
        - MINIO_DOMAIN=minio
      networks:
        iceberg_net:
          aliases:
            - warehouse.minio
      ports:
        - 9001:9001
        - 9000:9000
      command: ["server", "/data", "--console-address", ":9001"]

  mc:
    depends_on:
      - minio
    image: minio/mc
    container_name: mc
    networks:
      iceberg_net:
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
    entrypoint: > 
      /bin/sh -c "
      until (/usr/bin/mc alias set minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc anonymous set download minio/warehouse;
      /usr/bin/mc admin policy attach minio readwrite --user admin;
      tail -f /dev/null
      "
      
  backend:
    build:
      context: ./backend
    container_name: sv_backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - minio
    networks:
      iceberg_net:

  event_loader:
    build:
      context: ./backend
      dockerfile: Dockerfile.event_loader
    container_name: sv_event_loader
    volumes:
      - ./backend:/app
    networks:
      iceberg_net:
    depends_on:
      - redis
      - minio
      - create_table
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - PYICEBERG_CATALOG__DEFAULT__URI=http://iceberg-rest:8181
      - PYICEBERG_CATALOG__DEFAULT__IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - PYICEBERG_CATALOG__DEFAULT__S3__ENDPOINT=http://minio:9000
      - PYICEBERG_CATALOG__DEFAULT__TYPE=rest


  create_table:
    build:
      context: ./backend
      dockerfile: Dockerfile.create_table
    container_name: sv_create_table
    volumes:
      - ./backend:/app
    networks:
      iceberg_net:
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - PYICEBERG_CATALOG__DEFAULT__URI=http://iceberg-rest:8181
      - PYICEBERG_CATALOG__DEFAULT__IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - PYICEBERG_CATALOG__DEFAULT__S3__ENDPOINT=http://minio:9000
      - PYICEBERG_CATALOG__DEFAULT__TYPE=rest

  streamlit:
    build:
      context: ./backend
      dockerfile: Dockerfile.streamlit 
    command: streamlit run streamlit/main.py
    container_name: sv_streamlit
    volumes:
      - ./backend:/app
    ports:
      - "8501:8501"
    networks:
      iceberg_net:
    environment:
      - AWS_ACCESS_KEY_ID=admin
      - AWS_SECRET_ACCESS_KEY=password
      - AWS_REGION=us-east-1
      - PYICEBERG_CATALOG__DEFAULT__URI=http://iceberg-rest:8181
      - PYICEBERG_CATALOG__DEFAULT__IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - PYICEBERG_CATALOG__DEFAULT__S3__ENDPOINT=http://minio:9000
      - PYICEBERG_CATALOG__DEFAULT__TYPE=rest


  frontend:
    build: ./frontend
    container_name: sv_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      iceberg_net:

networks:
  iceberg_net:
    driver: bridge